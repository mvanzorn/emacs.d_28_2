;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(query-replace-from-to-history read-number-history consult--line-history xref--read-identifier-history compile-history read-char-history web-mode-tag-history counsel-descbinds-history bookmark-history face-name-history counsel-describe-symbol-history ctrlf-search-history org-refile-history org-tags-history imenu--history-list org-link--history org-read-date-history counsel-git-grep-history query-replace-history counsel-imenu-history counsel-apropos-history org-roam-node-history read-envvar-name-history magit-revision-history command-history empty-history counsel-ibuffer-history ivy-history counsel-M-x-history swiper-history embark--prompter-history read-expression-history yes-or-no-p-history loccur-history regexp-history buffer-name-history file-name-history minibuffer-history extended-command-history))
(setq read-number-history '("1"))
(setq xref--read-identifier-history '(#("getElementById" 0 14 (identifier-at-point t fontified t font-lock-face js2-function-call))))
(setq read-char-history '("O"))
(setq web-mode-tag-history '("p" "strong" "li" "strong" "p" "a" "h1"))
(setq face-name-history '("font-lock-comment-face" "avy-lead-face" "avy-lead-face-0" "help-key-binding" "font-lock-comment-face"))
(setq counsel-describe-symbol-history '(#("lsp-ui-sideline-" 0 16 (ivy-index 5)) "lsp-ui-sideline-show-hover" #("treemacs- other" 0 15 (ivy-index 0)) "treemacs-is-never-other-window"))
(setq ctrlf-search-history '("ace-mc"))
(setq org-refile-history '("2022-23 AAA Theme: Sustaining Our Profession (aaahq.org)"))
(setq org-tags-history '(#("AFAECW" 0 6 (ivy-index 0))))
(setq org-read-date-history '("   "))
(setq counsel-git-grep-history '(#("Examples" 0 8 (ivy-index 4)) "src/pages/examples.njk:8:<h2>Examples</h2>" #("View" 0 4 (ivy-index 0)) "src/index.njk:131:      {% image \"./src/assets/images/bergsee.jpeg\", \"View from top of a mountain onto a sea and another mountain in" #("11ty-plain-bootstrap5" 0 21 (ivy-index 1)) "src/index.njk:4:  title: 11ty-plain-bootstrap5" #("copyright" 0 9 (ivy-index 2)) "AIScustom.less:254:#copyrights {" #("2021" 0 4 (ivy-index 0)) ".style.less.~undo-tree~:85:([nil nil ((#(\"/\" 0 1 (fontified t)) . -610) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (#(\"/\" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -611) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) 612 (t 25162 13708 897966 700000)) nil (25162 20860 208924 500000) 0 nil] [nil nil ((#(\";\" 0 1 (fontified t face font-lock-comment-face)) . -1096) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (#(\"" #("footer-logo" 0 11 (ivy-index 0)) "footer.less:128:.footer-logo {" #("Gotham" 0 6 (ivy-index 18)) "AIScustom.less:513:	font-family: 'Gotham-Ultra';" #("tab-pane" 0 8 (ivy-index 9)) "AIScustom.less:129:.tab-pane h1 {" #("B8AAD3" 0 6 (ivy-index 1)) "aaacustom.less:227:  background-color: #B8AAD3;" #("footer" 0 6 (ivy-index 5)) "dark.less:1017:#footer.dark," "aaacustom.less:304:.panel-image~ .panel-footer a {" #("floor" 0 5 (ivy-index 0)) "mixins.less:21:	@width: floor( ( @container - ( @margin * ( @columns - 1 ) ) ) / @columns );"))
(setq query-replace-history '(":endure" ":ensure" "col-4 p-5" "col-4" "" "mt-5" "" "mt-5" "" "rounded-3" "" "\\([0-9]*\\)" "" "\\([0-9]+\\)" "" "f" "" "/*/" "" "*" "" "[[:digit]]" "" "\\([0-9]\\)\\" "" "\\[0-9]\\" "" "\\[0-9]*\\" "" "\\{0-9}*\\" "" "/{0-9}*/" "999999" "333333" "333333" "" "@tertiary-lighter-color" #("#B8AAD3" 0 6 (face (:background #("#B8AAD3" 0 7 (fontified t)) :foreground "black" :box (:line-width -1))) 6 7 (face (:background #("#B8AAD3" 0 7 (fontified t)) :foreground "black" :box (:line-width -1)) rear-nonsticky t)) "@tertiary-lighter-color" "#c0ddb8" "#c0ddb8" "#c0ddb8"))
(setq counsel-apropos-history '(#("replace regexp" 0 14 (ivy-index 1)) "query-replace-regexp" #("prettier" 0 8 (ivy-index 1)) "prettier-js-args"))
(setq read-envvar-name-history '("HOME"))
(setq command-history '((check-parens) (smartparens-mode 'toggle) (check-parens) (check-parens) (check-parens) (smartparens-mode 'toggle) (ediff "/home/mark/.emacs.d/init.el" "/home/mark/init.el.20230109") (ediff "/home/mark/.emacs.d/init.el" "/home/mark/init.el.20230109") (ediff "/home/mark/.emacs.d/init.el" "/home/mark/.emacs.d/init.el") (lisp-mode) (helpful-key "") (nano-dark) (nano-dark) (nano-light) (eval-region (region-beginning) (region-end)) (load-theme 'nano-dark nil nil) (load-theme 'nano-light nil nil) (treemacs-add-project-to-workspace "~/conferences/") (eval-region (region-beginning) (region-end)) (flycheck-list-errors) (view-lossage) (package-list-packages nil) (package-list-packages nil) (package-refresh-contents) (eval-expression '(byte-recompile-directory package-user-dir nil 'force) nil nil 127) (eval-expression '(byte-recompile-directory package-user-dir nil 'force) nil nil 127) (load-theme 'nano-light nil nil) (load-theme 'nano-dark nil nil) (eval-region (region-beginning) (region-end)) (all-the-icons-install-fonts nil) (all-the-icons-insert-faicon nil) (eval-region (region-beginning) (region-end)) (eval-region (region-beginning) (region-end)) (eval-region (region-beginning) (region-end)) (doom-modeline-mode 'toggle) (doom-modeline-mode 'toggle) (helpful-key "+") (zoom) (zoom-mode 'toggle) (zoom) (zoom-mode 'toggle) (zoom) (flycheck-list-errors) (all-the-icons-ivy-rich-kill-buffer "test.html") (emmet-mode 'toggle) (emmet-preview-mode 'toggle) (emmet-preview-mode 'toggle) (emmet-preview-mode 'toggle) (undo-tree-visualize) (vr/query-replace ":ensure" ":endure" 39022 77457) (vr--minibuffer-help) (eval-region (region-beginning) (region-end)) (counsel-recentf) (mc/mark-next-like-this 1) (ace-jump-word-mode 112) (ace-jump-word-mode 112) (my-previous-like-this 1) (helpful-key [key-chord 44 109]) (helpful-key [key-chord 102 106]) (ace-jump-word-mode 114) (avy-goto-char-2 53 52 nil nil nil) (customize-group "hl-line") (all-the-icons-ivy-rich-kill-buffer "main.js") (eval-region (region-beginning) (region-end)) (hl-line-mode 'toggle) (hl-line-flash) (hl-line-when-idle-interval 1) (toggle-hl-line-when-idle nil 1) (customize-group "hl-line") (eval-region (region-beginning) (region-end)) (customize) (customize) (eval-region (region-beginning) (region-end)) (eval-region (region-beginning) (region-end)) (ace-jump-word-mode 98) (ace-jump-mode 1) (eval-expression '(byte-recompile-directory package-user-dir nil 'force) nil nil 127) (straight-rebuild-all) (minimap-create) (minimap-mode 'toggle) (emmet-preview-mode 'toggle) (emmet-mode 'toggle) (xterm-mouse-mode 'toggle) (diff-hl-margin-mode 'toggle) (diff-hl-margin-mode 'toggle) (load-theme 'doom-peacock nil nil) (eval-region (region-beginning) (region-end)) (eval-region (region-beginning) (region-end)) (comment-dwim nil) (customize) (eval-expression '(global-hl-line-mode 1) nil nil 127) (treemacs-add-project-to-workspace "~/cchat-app/../conferences/") (all-the-icons-ivy-rich-kill-buffer "App.svelte") (eval-region (region-beginning) (region-end)) (package-install 'treemacs-icons-dired nil) (use-package-lint) (treemacs-add-project-to-workspace "~/cchat-app/") (ace-jump-word-mode 117) (load-theme 'doom-molokai nil nil) (eval-region (region-beginning) (region-end))))
(setq counsel-ibuffer-history '(#("     main.js                  737 Web              ~/resolutions/server/main.js" 0 79 (idx 2 ivy-index 2)) #("     *scratch*                144 Lisp Interaction " 0 51 (ivy-index 3 idx 3)) #(" *   init.org               51762 Org              ~/.emacs.d/init.org" 0 70 (ivy-index 5 idx 5)) #("     init.org               51445 Org              ~/.emacs.d/init.org" 0 70 (ivy-index 1 idx 1)) #("     notes.org                204 Org              ~/OneDrive/Org/notes.org" 0 75 (ivy-index 2 idx 2)) #("     init.org               51321 Org              ~/.emacs.d/init.org" 0 70 (ivy-index 2 idx 2)) #(" *   aaahq.org               1240 Org              ~/OneDrive/Org/aaahq.org" 0 75 (ivy-index 1 idx 1)) #("     style.less              1288 Less             ~/Projects/Tests/less/style.less" 0 83 (idx 3 ivy-index 3)) #("     style.less               763 Less             ~/Projects/Tests/less/style.less" 0 83 (ivy-index 3 idx 3))))
(setq ivy-history '(#("/home/mark/.emacs.d/init.el" 0 27 (ivy-index 0)) #("/home/mark/conferences/imports/ui/App.svelte" 0 44 (ivy-index 1)) #("/home/mark/cchat-app/server/main.js" 0 35 (ivy-index 0)) #(" " 0 1 (ivy-index 1248 swiper-line-number 1249 display "1249 ")) #("ini" 0 3 (ivy-index 0)) #("init.el" 0 7 (ivy-index 1)) #("init" 0 4 (ivy-index 2)) "/home/mark/.emacs.d/#init.org#" #("/home/mark/cchat-app/imports/api/issues.js" 0 42 (ivy-index 2)) #("/home/mark/cchat-app/imports/ui/App.jsx" 0 39 (ivy-index 1)) #("/home/mark/cchat-app/imports/api/links.js" 0 41 (ivy-index 3)) #("*scratch*" 0 9 (ivy-index 2)) #("~/cchat-app/imports/ui/App.svelte" 0 33 (ivy-index 0)) #("~/cchat-app/tests/main.js" 0 25 (ivy-index 1)) #("~/cchat-app/server/main.js" 0 26 (ivy-index 0)) #("*Messages*" 0 10 (ivy-index 3)) #("~/.emacs.d/init.el" 0 18 (ivy-index 4)) #("index.njk" 0 9 (ivy-index 0)) #("/var/www/ilwdata.org/11ty-plain-bootstrap5/src/index.njk" 0 56 (ivy-index 1)) #("founder.njk" 0 11 (ivy-index 1)) #("*GNU Emacs*" 0 11 (ivy-index 1)) #("/var/www/ilwdata.org/11ty-plain-bootstrap5/src/pages/founder.njk" 0 64 (ivy-index 2)) #("_custom.scss" 0 12 (ivy-index 2)) #("about.njk" 0 9 (ivy-index 12)) #("_my_variables.scss" 0 18 (ivy-index 2)) #("process.njk" 0 11 (ivy-index 10)) #("rgb(0 36 89)" 0 3 (ivy-index 0 face (:background "#002459" :foreground "#ffffff" :box (:line-width -1)) fontified t) 3 4 (ivy-index 0 face (:background "#002459" :foreground "#ffffff" :box (:line-width -1)) fontified t) 4 11 (ivy-index 0 face (:background "#002459" :foreground "#ffffff" :box (:line-width -1)) fontified t) 11 12 (ivy-index 0 face (:background "#002459" :foreground "#ffffff" :box (:line-width -1)) fontified t)) #("header.njk" 0 10 (ivy-index 13)) #("process2.njk" 0 12 (ivy-index 1)) #("contact.njk" 0 11 (ivy-index 1)) #("footer.njk" 0 10 (ivy-index 2)) #("founder.md" 0 10 (ivy-index 1)) #("ab" 0 2 (ivy-index 0)) #("base.njk" 0 8 (ivy-index 3)) #("/var/www/ilwdata.org/11ty-plain-bootstrap5/src/" 0 47 (idx 0 ivy-index 0)) #("style.css" 0 9 (ivy-index 2)) #("n" 0 1 (ivy-index 2)) "_includes" #("pr-ps-file-preview" 0 18 (ivy-index 0)) #("package-ena" 0 11 (ivy-index 0)) #("/home/mark/.emacs.d/init.org" 0 28 (ivy-index 0)) #("init.org" 0 8 (ivy-index 1)) #("/home/mark/.emacs.d  bac8cd9 [master]" 0 37 (ivy-index 0)) #("in" 0 2 (ivy-index 0)) #("main.js" 0 7 (ivy-index 3)) #("*lsp-log*" 0 9 (ivy-index 1)) #("main.html" 0 9 (ivy-index 3)) #("iosev" 0 5 (ivy-index 8)) "   '(default ((t (:family \"Iosevka Term\" :foundry \"UKWN\" :slant normal :weight normal :height 141 :width normal)))))" #("151" 0 3 (ivy-index 0)) "   '(default ((t (:family \"Iosevka Term\" :foundry \"UKWN\" :slant normal :weight normal :height 151 :width normal)))))" #("org" 0 3 (ivy-index 0)) "org-loaddefs.el" #("/home/mark/OneDrive/Org/aaahq.org" 0 33 (ivy-index 1)) #("aaahq.org" 0 9 (ivy-index 1)) #("home.org" 0 8 (ivy-index 0)) #("<src" 0 4 (ivy-index 0)) #("/ssh:mark@papreports.org:/var/www/papreports.org/public_html/reach-and-impact/" 0 78 (ivy-index 0)) #("react" 0 5 (ivy-index 13)) "Creates a React Functional Component with ES7 module system with PropTypes" #("/home/mark/Projects/test.js" 0 27 (ivy-index 4)) #("acc" 0 3 (ivy-index 2)) "accordion" #("/home/mark/Projects/Tests/orgtest1.org" 0 38 (ivy-index 3)) #("(setq browse-url-browser-function 'browse-url-generic
      browse-url-generic-program \"chromium-browser\")" 0 106 (ivy-index 0)) #("style.less" 0 10 (ivy-index 3)) #("@tertiary-lighter-color" 0 23 (fontified t face font-lock-variable-name-face ivy-index 1)) #("#B8AAD3" 0 7 (fontified t face (:background #("#B8AAD3" 0 7 (fontified t)) :foreground "black" :box (:line-width -1)) ivy-index 0)) #("/home/mark/Projects/Tests/less/style.less" 0 41 (ivy-index 2)) #("variables.less" 0 14 (ivy-index 2)) #("--var-tertiary-lighter-colo" 0 27 (ivy-index 1 face font-lock-variable-name-face fontified t)) #("c0ddb8" 0 6 (ivy-index 0)) #("/home/mark/Projects/Tests/test.html" 0 35 (ivy-index 0)) #("try" 0 3 (ivy-index 0)) "try...catch statement" #("moda" 0 4 (ivy-index 0)) "modal" #("am-sponsors.html" 0 16 (ivy-index 1)) #("/home/mark/AAAHQ/am-sponsors.html" 0 33 (ivy-index 4)) #("/ssh:mark@papreports.org:/var/www/papreports.org/public_html/reach-and-impact/index.html" 0 88 (ivy-index 3)) #("index.html" 0 10 (ivy-index 1)) #("index.test.html" 0 15 (ivy-index 2)) #(" <div class=\"step\">
            <p>Here is how one state is utilizing PAP in its communities.</p>
          </div>" 0 1 (ivy-index 0) 1 2 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face ivy-index 0) 2 5 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face ivy-index 0) 5 6 (tag-name "div" tag-type start ivy-index 0) 6 7 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face ivy-index 0) 7 11 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face ivy-index 0) 11 12 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face ivy-index 0) 12 17 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face ivy-index 0) 17 18 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face ivy-index 0) 18 19 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face ivy-index 0) 19 32 (ivy-index 0) 32 33 (tag-name "p" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face ivy-index 0) 33 34 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face ivy-index 0) 34 35 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face ivy-index 0) 35 93 (ivy-index 0) 93 94 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face ivy-index 0) 94 95 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face ivy-index 0) 95 96 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face ivy-index 0) 96 97 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face ivy-index 0) 97 108 (ivy-index 0) 108 109 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face ivy-index 0) 109 110 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face ivy-index 0) 110 113 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face ivy-index 0) 113 114 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face ivy-index 0)) #("Predict-Align-Prevent’s on-the-ground community prevention processes are ensuring initiatives succeed. 
" 0 104 (ivy-index 1)) #(">Here are just a few of the state, county, and city initiatives
                and programs that PAP analyses are supporting" 0 1 (tag-name "strong" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face ivy-index 0) 1 125 (ivy-index 0)) #("/home/mark/.emacs.d/bookmarks" 0 29 (ivy-index 6)) #("/ssh:mark@papreports.org:/var/www/papreports.org/public_html/reach-and-impact/index.test.html" 0 93 (ivy-index 0)) #("nh.main.babel.css" 0 17 (ivy-index 6)) #("        <div class=\"fig map9\">
          <h1 class=\"d-none\" id=\"PAP NH Maps\">PAP NH Maps</h1>
        </div>" 0 8 (ivy-index 0) 8 9 (ivy-index 0 font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 9 12 (ivy-index 0 font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 12 13 (ivy-index 0 tag-type start tag-name "div") 13 14 (ivy-index 0 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 14 18 (ivy-index 0 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 18 19 (ivy-index 0 font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 19 28 (ivy-index 0 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 28 29 (ivy-index 0 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 29 30 (ivy-index 0 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 30 41 (ivy-index 0) 41 42 (ivy-index 0 font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h1") 42 44 (ivy-index 0 font-lock-face web-mode-html-tag-face tag-type start tag-name "h1") 44 45 (ivy-index 0 tag-type start tag-name "h1") 45 46 (ivy-index 0 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t tag-attr-beg 0) 46 50 (ivy-index 0 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t) 50 51 (ivy-index 0 font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h1" tag-attr t) 51 58 (ivy-index 0 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t) 58 59 (ivy-index 0 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr-end 5 tag-attr t) 59 60 (ivy-index 0 tag-type start tag-name "h1") 60 61 (ivy-index 0 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t tag-attr-beg 0) 61 62 (ivy-index 0 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t) 62 63 (ivy-index 0 font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h1" tag-attr t) 63 75 (ivy-index 0 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t) 75 76 (ivy-index 0 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr-end 2 tag-attr t) 76 77 (ivy-index 0 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1") 77 88 (ivy-index 0) 88 89 (ivy-index 0 font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1") 89 90 (ivy-index 0 font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1") 90 92 (ivy-index 0 font-lock-face web-mode-html-tag-face tag-type end tag-name "h1") 92 93 (ivy-index 0 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1") 93 102 (ivy-index 0) 102 103 (ivy-index 0 font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 103 104 (ivy-index 0 font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 104 107 (ivy-index 0 font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 107 108 (ivy-index 0 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) #("Impactful_Communication.png" 0 27 (ivy-index 1)) #(" <!-- PAP NH Maps  -->
      <section class=\"side-by-side\">
        <div class=\"fig map9\">
          <h1 class=\"\" id=\"PAP NH Maps\">PAP NH Maps</h1>
        </div>
        <article class=\"step-60\">
          <div class=\"step step-out\"></div>
          <div class=\"step step-out\"></div>

          <div class=\"step\">
            <p>
              PAP New Hampshire Program Maps showing areas in the highest need
              of services and resources can now be found at the
              <a
                href=\"https://wisdom.dhhs.nh.gov/wisdom/topics.html?topic=community-indicators\"
                target=\"_blank\"
                >New Hampshire Health and Services Data Portal</a
              >
              under Community Collaborations.
            </p>
          </div>
          <div class=\"step\">
            <p>
              These maps are supporting local communities to implement ongoing
              targeted programs and align interventions that are likely to have
              the greatest impact.
            </p>
          </div>

          <div class=\"step\">
            <p>
              Multiple communities around the country now use PAP Maps and
              resources to support grassroots prevention by engaging and
              informing community members’ efforts to reduce ACEs.
            </p>
          </div>

          <div class=\"step step-out\"></div>
        </article>
      </section>
" 0 1 (ivy-index 5) 1 2 (ivy-index 5 font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 2 21 (ivy-index 5 font-lock-face web-mode-comment-face tag-type comment) 21 22 (ivy-index 5 font-lock-face web-mode-comment-face tag-end t tag-type comment) 22 29 (ivy-index 5) 29 30 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "section") 30 37 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type start tag-name "section") 37 38 (ivy-index 5 tag-type start tag-name "section") 38 39 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "section" tag-attr t tag-attr-beg 0) 39 43 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "section" tag-attr t) 43 44 (ivy-index 5 font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "section" tag-attr t) 44 57 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "section" tag-attr t) 57 58 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "section" tag-attr-end 5 tag-attr t) 58 59 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "section") 59 68 (ivy-index 5) 68 69 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 69 72 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 72 73 (ivy-index 5 tag-type start tag-name "div") 73 74 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 74 78 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 78 79 (ivy-index 5 font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 79 88 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 88 89 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 89 90 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 90 101 (ivy-index 5) 101 102 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h1") 102 104 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type start tag-name "h1") 104 105 (ivy-index 5 tag-type start tag-name "h1") 105 106 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t tag-attr-beg 0) 106 110 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t) 110 111 (ivy-index 5 font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h1" tag-attr t) 111 112 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t) 112 113 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr-end 5 tag-attr t) 113 114 (ivy-index 5 tag-type start tag-name "h1") 114 115 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t tag-attr-beg 0) 115 116 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h1" tag-attr t) 116 117 (ivy-index 5 font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h1" tag-attr t) 117 129 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr t) 129 130 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h1" tag-attr-end 2 tag-attr t) 130 131 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1") 131 142 (ivy-index 5) 142 143 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1") 143 144 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1") 144 146 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type end tag-name "h1") 146 147 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1") 147 156 (ivy-index 5) 156 157 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 157 158 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 158 161 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 161 162 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 162 171 (ivy-index 5) 171 172 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "article") 172 179 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type start tag-name "article") 179 180 (ivy-index 5 tag-type start tag-name "article") 180 181 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "article" tag-attr t tag-attr-beg 0) 181 185 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "article" tag-attr t) 185 186 (ivy-index 5 font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "article" tag-attr t) 186 194 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "article" tag-attr t) 194 195 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "article" tag-attr-end 5 tag-attr t) 195 196 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "article") 196 207 (ivy-index 5) 207 208 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 208 211 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 211 212 (ivy-index 5 tag-type start tag-name "div") 212 213 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 213 217 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 217 218 (ivy-index 5 font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 218 232 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 232 233 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 233 234 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 234 235 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 235 236 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 236 239 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 239 240 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 240 251 (ivy-index 5) 251 252 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 252 255 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 255 256 (ivy-index 5 tag-type start tag-name "div") 256 257 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 257 261 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 261 262 (ivy-index 5 font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 262 276 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 276 277 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 277 278 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 278 279 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 279 280 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 280 283 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 283 284 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 284 296 (ivy-index 5) 296 297 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 297 300 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 300 301 (ivy-index 5 tag-type start tag-name "div") 301 302 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 302 306 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 306 307 (ivy-index 5 font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 307 312 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 312 313 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 313 314 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 314 327 (ivy-index 5) 327 328 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p") 328 329 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 329 330 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 330 488 (ivy-index 5) 488 489 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 489 490 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 490 507 (ivy-index 5 tag-type start tag-name "a") 507 508 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 508 511 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 511 512 (ivy-index 5 font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 512 585 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 585 586 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 586 603 (ivy-index 5 tag-type start tag-name "a") 603 604 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 604 609 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 609 610 (ivy-index 5 font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 610 617 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 617 618 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 6 tag-attr t) 618 635 (ivy-index 5 tag-type start tag-name "a") 635 636 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 636 681 (ivy-index 5) 681 682 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 682 683 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 683 684 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 684 699 (ivy-index 5 tag-type end tag-name "a") 699 700 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 700 759 (ivy-index 5) 759 760 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 760 761 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 761 762 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 762 763 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p") 763 774 (ivy-index 5) 774 775 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 775 776 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 776 779 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 779 780 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 780 791 (ivy-index 5) 791 792 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 792 795 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 795 796 (ivy-index 5 tag-type start tag-name "div") 796 797 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 797 801 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 801 802 (ivy-index 5 font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 802 807 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 807 808 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 808 809 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 809 822 (ivy-index 5) 822 823 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p") 823 824 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 824 825 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 825 1032 (ivy-index 5) 1032 1033 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 1033 1034 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 1034 1035 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 1035 1036 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p") 1036 1047 (ivy-index 5) 1047 1048 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 1048 1049 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 1049 1052 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 1052 1053 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 1053 1065 (ivy-index 5) 1065 1066 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1066 1069 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 1069 1070 (ivy-index 5 tag-type start tag-name "div") 1070 1071 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1071 1075 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 1075 1076 (ivy-index 5 font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 1076 1081 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 1081 1082 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 1082 1083 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 1083 1096 (ivy-index 5) 1096 1097 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p") 1097 1098 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 1098 1099 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 1099 1327 (ivy-index 5) 1327 1328 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 1328 1329 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 1329 1330 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 1330 1331 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p") 1331 1342 (ivy-index 5) 1342 1343 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 1343 1344 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 1344 1347 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 1347 1348 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 1348 1360 (ivy-index 5) 1360 1361 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1361 1364 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 1364 1365 (ivy-index 5 tag-type start tag-name "div") 1365 1366 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1366 1370 (ivy-index 5 font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 1370 1371 (ivy-index 5 font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 1371 1385 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 1385 1386 (ivy-index 5 font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 1386 1387 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 1387 1388 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 1388 1389 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 1389 1392 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 1392 1393 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 1393 1402 (ivy-index 5) 1402 1403 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "article") 1403 1404 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "article") 1404 1411 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type end tag-name "article") 1411 1412 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "article") 1412 1419 (ivy-index 5) 1419 1420 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "section") 1420 1421 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "section") 1421 1428 (ivy-index 5 font-lock-face web-mode-html-tag-face tag-type end tag-name "section") 1428 1429 (ivy-index 5 font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "section") 1429 1430 (ivy-index 5)) #("new" 0 3 (ivy-index 0)) #("App.js" 0 6 (ivy-index 0))))
(setq counsel-M-x-history '(#("check-parens" 0 12 (ivy-index 0)) #("smartparens-mode" 0 16 (ivy-index 4)) #("package-install" 0 15 (ivy-index 0)) #("ediff" 0 5 (ivy-index 23)) #("lisp-mo" 0 7 (ivy-index 1)) "lisp-mode" #("nano-dark" 0 9 (ivy-index 0)) #("nano-light" 0 10 (ivy-index 0)) #("eval-re" 0 7 (ivy-index 0)) "eval-region" #("load-theme" 0 10 (ivy-index 0)) #("treemacs add " 0 13 (ivy-index 0)) "treemacs-add-project-to-workspace" "eval-region" #("flych" 0 5 (ivy-index 0)) "flycheck-list-errors" #("lossage" 0 7 (ivy-index 0)) "view-lossage" #("package-list" 0 12 (ivy-index 1)) "package-list-packages" #("package-li" 0 10 (ivy-index 2)) "package-list-packages" #("package-ref" 0 11 (ivy-index 0)) "package-refresh-contents" "eval-region" #("icons" 0 5 (ivy-index 11)) "all-the-icons-install-fonts" #("all-the-i" 0 9 (ivy-index 0)) "all-the-icons-insert-faicon" "eval-region" #("eval-reg" 0 8 (ivy-index 0)) "eval-region" "eval-region" #("doom-mo" 0 7 (ivy-index 0)) "doom-modeline-mode" #("doom-mod" 0 8 (ivy-index 0)) "doom-modeline-mode" #("zoom" 0 4 (ivy-index 2)) #("zoom-mode" 0 9 (ivy-index 0)) #("fly" 0 3 (ivy-index 0)) "flycheck-list-errors" #("emmet-mode" 0 10 (ivy-index 1)) #("emmet" 0 5 (ivy-index 2)) "emmet-preview-mode" "emmet-preview-mode" #("emmet-pre" 0 9 (ivy-index 1)) "emmet-preview-mode" #("undo" 0 4 (ivy-index 14)) "undo-tree-visualize" #("query-replace" 0 13 (ivy-index 9)) #("vr-" 0 3 (ivy-index 0)) "vr--minibuffer-help" "eval-region" #("recentf" 0 7 (ivy-index 3)) "counsel-recentf" #("mark-next-like-this" 0 19 (ivy-index 3)) "mc/mark-next-like-this" #("my-pre" 0 6 (ivy-index 0)) "my-previous-like-this" #("customize-group" 0 15 (ivy-index 0)) #("eval-r" 0 6 (ivy-index 0)) "eval-region" #("hl-line" 0 7 (ivy-index 1)) "hl-line-mode" "hl-line-flash" "hl-line-when-idle-interval" "toggle-hl-line-when-idle" "eval-region" #("customize" 0 9 (ivy-index 47)) "eval-region" "eval-region" #("ace-jump" 0 8 (ivy-index 0)) "ace-jump-mode" #("rebuild" 0 7 (ivy-index 1)) "straight-rebuild-all" #("minimap" 0 7 (ivy-index 0)) "minimap-create" "minimap-mode" "emmet-preview-mode" #("mouse" 0 5 (ivy-index 10)) "xterm-mouse-mode" #("diff-hl margin" 0 14 (ivy-index 0)) "diff-hl-margin-mode" #("diff-hl" 0 7 (ivy-index 10)) "diff-hl-margin-mode" "eval-region" "eval-region" #("comment-d" 0 9 (ivy-index 1)) "comment-dwim" "eval-region" #("package install" 0 15 (ivy-index 1)) #("package-" 0 8 (ivy-index 1)) "use-package-lint" #("treemacs-load-theme" 0 19 (ivy-index 0)) #("treemacs-add" 0 12 (ivy-index 0)) "treemacs-add-project-to-workspace" "eval-region" "eval-region" "rjsx-comment-dwim"))
(setq swiper-history '(#("smartparens" 0 11 (ivy-index 6)) #(" (add-hook 'markdown-mode-hook 'turn-on-smartparens-strict-mode)" 0 1 (display "1855 " swiper-line-number 1855) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t)) #("smartpa" 0 7 (ivy-index 2)) #(" (use-package smartparens-config" 0 1 (swiper-line-number 1850 display "1850 ") 1 2 (fontified t face (rainbow-delimiters-depth-1-face)) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 32 (fontified t face font-lock-constant-face)) #("defmacro" 0 8 (ivy-index 0)) #(" defmacro def-pairs (pairs)" 0 1 (swiper-line-number 1857 display "1857 ") 1 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-1-face)) 21 26 (fontified t) 26 27 (fontified t face (rainbow-delimiters-depth-1-face))) #("nano" 0 4 (ivy-index 4)) #(" (nano-mode)" 0 1 (swiper-line-number 309 display "309  ") 1 2 (fontified t face (rainbow-delimiters-depth-1-face)) 2 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-1-face))) #("theme testin" 0 12 (ivy-index 0)) #(" ;; ;; MVZ 1-8-2023 Commented out for theme testing" 0 1 (swiper-line-number 1972 display "1972 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 51 (fontified t face font-lock-comment-face)) #("theme" 0 5 (ivy-index 23)) #(" (defvar my:theme 'doom-molokai)" 0 1 (display "1974 " swiper-line-number 1974) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 17 (face font-lock-variable-name-face fontified t) 17 31 (fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t)) #("treemacs" 0 8 (ivy-index 8)) #(" ;; (setq doom-themes-treemacs-theme \"doom-colors\") ; use \"doom-colors\" for less minimal icon theme" 0 1 (display "1871 " swiper-line-number 1871) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 99 (face font-lock-comment-face fontified t)) "mode" #(" ;;; NANO font stack from https://gist.github.com/rougier/b15fb6e98fadb6580958b1733659027b" 0 1 (display "288  " swiper-line-number 288) 1 5 (face font-lock-comment-delimiter-face fontified t) 5 90 (face font-lock-comment-face fontified t)) #("fonts" 0 5 (ivy-index 0)) #(" ;;; Fonts: http://www.figlet.org/examples.html" 0 1 (display "281  " swiper-line-number 281) 1 5 (face font-lock-comment-delimiter-face fontified t) 5 47 (face font-lock-comment-face fontified t)) #("load-theme" 0 10 (ivy-index 1)) #("center" 0 6 (ivy-index 3)) #(" ;; (use-package centered-cursor-mode" 0 1 (swiper-line-number 1067 display "1067 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 37 (fontified t face font-lock-comment-face)) #(" (use-package centered-cursor-mode" 0 1 (display "1067 " swiper-line-number 1067) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 34 (face font-lock-constant-face fontified t)) #("font" 0 4 (ivy-index 0)) #(" ;;; http://www.figlet.org/figlet.el  ;;; Hardcoded to use roman as default font" 0 1 (display "280  " swiper-line-number 280) 1 5 (face font-lock-comment-delimiter-face fontified t) 5 80 (face font-lock-comment-face fontified t)) #(" ;;; http://www.figlet.org/figlet.el  ;;; Hardcoded to use roman as default font" 0 1 (swiper-line-number 280 display "280  ") 1 5 (fontified t face font-lock-comment-delimiter-face) 5 80 (fontified t face font-lock-comment-face)) #(" ;;; Fonts: http://www.figlet.org/examples.html" 0 1 (swiper-line-number 281 display "281  ") 1 5 (fontified t face font-lock-comment-delimiter-face) 5 47 (fontified t face font-lock-comment-face)) #("Iosev" 0 5 (ivy-index 0)) #(" ;;  '((t :family \"Iosevka Nerd Font\" ))" 0 1 (swiper-line-number 700 display "700  ") 1 5 (fontified t face font-lock-comment-delimiter-face) 5 40 (fontified t face font-lock-comment-face)) #("fancy" 0 5 (ivy-index 0)) #("modeline" 0 8 (ivy-index 2)) #(" (use-package doom-modeline" 0 1 (swiper-line-number 1857 display "1857 ") 1 2 (fontified t face (rainbow-delimiters-depth-1-face)) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 27 (fontified t face font-lock-constant-face)) #("zoom" 0 4 (ivy-index 1)) #(" (use-package zoom" 0 1 (display "997  " swiper-line-number 997) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 18 (face font-lock-constant-face fontified t)) #("key-ch" 0 6 (ivy-index 0)) #("find" 0 4 (ivy-index 7)) #("replace" 0 7 (ivy-index 4)) #(" ;;    (setq clipboard (replace-regexp-in-string \"\\r\" \"\" clipboard)) ; Remove Windows ^M characters" 0 1 (display "1121 " swiper-line-number 1121) 1 7 (face font-lock-comment-delimiter-face fontified t) 7 99 (face font-lock-comment-face fontified t)) #("key-cho" 0 7 (ivy-index 0)) #("mark-pre" 0 8 (ivy-index 0)) #("mark-previous" 0 13 (ivy-index 1)) #("my-pre" 0 6 (ivy-index 1)) #("my-previou" 0 10 (ivy-index 0)) #(" (defun my-previous-like-this (arg)" 0 1 (display "192  " swiper-line-number 192) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 29 (face font-lock-function-name-face fontified t) 29 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-2-face) fontified t) 31 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-2-face) fontified t)) #("expand" 0 6 (ivy-index 1)) #(" (use-package expand-region" 0 1 (swiper-line-number 177 display "177  ") 1 2 (fontified t face (rainbow-delimiters-depth-1-face)) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 27 (fontified t face font-lock-constant-face)) #("tab" 0 3 (ivy-index 14)) #("ace-jump" 0 8 (ivy-index 2)) #("hl-line" 0 7 (ivy-index 4)) #(" ;;;hl-line+  3-16-2022" 0 1 (swiper-line-number 993 display "993  ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 23 (fontified t face font-lock-comment-face)) #(" ;;;hl-line+  3-16-2022" 0 1 (display "993  " swiper-line-number 993) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 23 (face font-lock-comment-face fontified t)) #("   (window-scroll-functions . hl-line-flash)" 0 1 (display "1001 " swiper-line-number 1001) 1 3 (fontified t) 3 4 (face (rainbow-delimiters-depth-2-face) fontified t) 4 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-2-face) fontified t)) #("highlight" 0 9 (ivy-index 1)) #(" ;;;; Highlight Indent Guides 3-16-2022" 0 1 (display "984  " swiper-line-number 984) 1 6 (face font-lock-comment-delimiter-face fontified t) 6 39 (face font-lock-comment-face fontified t)) #(" ;;;hl-line+  3-16-2022" 0 1 (swiper-line-number 993 display "993  ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 23 (fontified t face font-lock-comment-face)) #(" ;; (use-package hl-line+" 0 1 (swiper-line-number 994 display "994  ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 25 (fontified t face font-lock-comment-face)) #(" (set-face-background 'hl-line \"#3e4446\")" 0 1 (display "141  " swiper-line-number 141) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 31 (fontified t) 31 40 (face font-lock-string-face fontified t) 40 41 (face (rainbow-delimiters-depth-1-face) fontified t)) #(" ;; hl-line+  3-16-2022" 0 1 (display "993  " swiper-line-number 993) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 23 (face font-lock-comment-face fontified t)) #("line+" 0 5 (ivy-index 1)) #("    (global-hl-line-mode 1)" 0 1 (display "7  " swiper-line-number 7) 1 2 (read-only nil face ivy-current-match swiper-line-number 140 display "140  " mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip)) 2 4 (read-only nil face ivy-current-match fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip)) 4 5 (read-only nil fontified t face (ivy-current-match rainbow-delimiters-depth-1-face) mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip)) 5 26 (read-only nil face ivy-current-match fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip)) 26 27 (read-only nil fontified t face (ivy-current-match rainbow-delimiters-depth-1-face) mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip))) #("    (global-hl-line-mode 1)" 0 1 (ivy-index 6 swiper-line-number 7 display "7  ") 1 2 (ivy-index 6 help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "140  " swiper-line-number 140 face ivy-current-match read-only nil) 2 4 (ivy-index 6 help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t face ivy-current-match read-only nil) 4 5 (ivy-index 6 help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face (ivy-current-match rainbow-delimiters-depth-1-face) fontified t read-only nil) 5 26 (ivy-index 6 help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t face ivy-current-match read-only nil) 26 27 (ivy-index 6 help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face (ivy-current-match rainbow-delimiters-depth-1-face) fontified t read-only nil)) #("   (global-hl-line-mode 1)" 0 1 (display "140  " swiper-line-number 140) 1 3 (fontified t) 3 4 (face (rainbow-delimiters-depth-1-face) fontified t) 4 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t)) #("avy-" 0 4 (ivy-index 0)) #(" (global-set-key (kbd \"C-:\") 'avy-goto-char-2)" 0 1 (swiper-line-number 1089 display "1089 ") 1 2 (fontified t face (rainbow-delimiters-depth-1-face)) 2 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-2-face)) 18 22 (fontified t) 22 27 (fontified t face font-lock-string-face) 27 28 (fontified t face (rainbow-delimiters-depth-2-face)) 28 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face))) #("   (use-package ace-jump-mode" 0 1 (swiper-line-number 2089 display "2089 ") 1 3 (fontified t) 3 4 (fontified t face (rainbow-delimiters-depth-1-face)) 4 15 (fontified t face font-lock-keyword-face) 15 16 (fontified t) 16 29 (fontified t face font-lock-constant-face)) #("global-hl" 0 9 (ivy-index 0)) #("   ;;(global-hl-line-mode 1)" 0 1 (swiper-line-number 139 display "139  ") 1 3 (fontified t) 3 5 (fontified t face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-face) 6 27 (fontified t face font-lock-comment-face) 27 28 (fontified t face font-lock-comment-face)) #(" ;; `(hl-line ((t (:background \"#444444\"))))" 0 1 (swiper-line-number 703 display "703  ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 44 (fontified t face font-lock-comment-face)) #("   ;;(global-hl-line-mode 1)" 0 1 (swiper-line-number 139 display "139  ") 1 3 (fontified t) 3 5 (fontified t face font-lock-comment-delimiter-face) 5 28 (fontified t face font-lock-comment-face)) #("  (use-package hl-line+" 0 1 (display "991  " swiper-line-number 991) 1 2 (fontified t) 2 3 (face (rainbow-delimiters-depth-1-face) fontified t) 3 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 23 (face font-lock-constant-face fontified t)) #(" (use-package hl-line+" 0 1 (display "995  " swiper-line-number 995) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 22 (face font-lock-constant-face fontified t)) #("treema" 0 6 (ivy-index 3)) #(" (use-package treemacs" 0 1 (display "1242 " swiper-line-number 1242) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 22 (face font-lock-constant-face fontified t)) #(" (global-set-key (kbd \"M-0\") #'treemacs-select-window)" 0 1 (swiper-line-number 1245 display "1245 ") 1 2 (fontified t face (rainbow-delimiters-depth-1-face)) 2 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-2-face)) 18 22 (fontified t) 22 27 (fontified t face font-lock-string-face) 27 28 (fontified t face (rainbow-delimiters-depth-2-face)) 28 53 (fontified t) 53 54 (fontified t face (rainbow-delimiters-depth-1-face))) #(" ;;;; DOOM THEMES 3-16-2022" 0 1 (swiper-line-number 1771 display "1771 ") 1 6 (fontified t face font-lock-comment-delimiter-face) 6 27 (fontified t face font-lock-comment-face)) #("zenburn" 0 7 (ivy-index 6)) #("   zenburn-theme                  20220927.631   available    melpa    A low contrast color theme for Emacs." 0 1 (swiper-line-number 5714 display "5714 ") 1 3 (tabulated-list-id #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) tabulated-list-entry [("zenburn-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) action package-menu-describe-package) #("20220927.631" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A low contrast color theme for Emacs." 0 37 (font-lock-face package-description))]) 3 16 (button (t) category default-button face package-name font-lock-face package-name follow-link t package-desc #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) action package-menu-describe-package tabulated-list-column-name "Package" tabulated-list-id #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) tabulated-list-entry [("zenburn-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) action package-menu-describe-package) #("20220927.631" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A low contrast color theme for Emacs." 0 37 (font-lock-face package-description))]) 16 17 (tabulated-list-column-name "Package" tabulated-list-id #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) tabulated-list-entry [("zenburn-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) action package-menu-describe-package) #("20220927.631" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A low contrast color theme for Emacs." 0 37 (font-lock-face package-description))]) 17 34 (display (space :align-to 33) tabulated-list-column-name "Package" tabulated-list-id #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) tabulated-list-entry [("zenburn-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) action package-menu-describe-package) #("20220927.631" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A low contrast color theme for Emacs." 0 37 (font-lock-face package-description))]) 34 46 (font-lock-face package-status-available help-echo #("Version: 20220927.631" 9 21 (font-lock-face package-status-available)) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) tabulated-list-entry [("zenburn-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) action package-menu-describe-package) #("20220927.631" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A low contrast color theme for Emacs." 0 37 (font-lock-face package-description))]) 46 47 (tabulated-list-column-name "Version" tabulated-list-id #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) tabulated-list-entry [("zenburn-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) action package-menu-describe-package) #("20220927.631" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A low contrast color theme for Emacs." 0 37 (font-lock-face package-description))]) 47 49 (display (space :align-to 48) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) tabulated-list-entry [("zenburn-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) action package-menu-describe-package) #("20220927.631" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A low contrast color theme for Emacs." 0 37 (font-lock-face package-description))]) 49 58 (font-lock-face package-status-available help-echo #("Status: available" 8 17 (font-lock-face package-status-available)) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) tabulated-list-entry [("zenburn-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) action package-menu-describe-package) #("20220927.631" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A low contrast color theme for Emacs." 0 37 (font-lock-face package-description))]) 58 59 (tabulated-list-column-name "Status" tabulated-list-id #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) tabulated-list-entry [("zenburn-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) action package-menu-describe-package) #("20220927.631" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A low contrast color theme for Emacs." 0 37 (font-lock-face package-description))]) 59 62 (display (space :align-to 61) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) tabulated-list-entry [("zenburn-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) action package-menu-describe-package) #("20220927.631" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A low contrast color theme for Emacs." 0 37 (font-lock-face package-description))]) 62 67 (font-lock-face package-status-available help-echo #("Archive: melpa" 9 14 (font-lock-face package-status-available)) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) tabulated-list-entry [("zenburn-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) action package-menu-describe-package) #("20220927.631" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A low contrast color theme for Emacs." 0 37 (font-lock-face package-description))]) 67 68 (tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) tabulated-list-entry [("zenburn-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) action package-menu-describe-package) #("20220927.631" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A low contrast color theme for Emacs." 0 37 (font-lock-face package-description))]) 68 71 (display (space :align-to 70) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) tabulated-list-entry [("zenburn-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) action package-menu-describe-package) #("20220927.631" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A low contrast color theme for Emacs." 0 37 (font-lock-face package-description))]) 71 108 (font-lock-face package-description help-echo #("Description: A low contrast color theme for Emacs." 13 50 (font-lock-face package-description)) tabulated-list-column-name "Description" tabulated-list-id #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) tabulated-list-entry [("zenburn-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc zenburn-theme (20220927 631) "A low contrast color theme for Emacs." nil single "melpa" nil ((:commit . "4788de0bcfecf8faec69251decb9924492d008f3") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:url . "http://github.com/bbatsov/zenburn-emacs")) nil) action package-menu-describe-package) #("20220927.631" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A low contrast color theme for Emacs." 0 37 (font-lock-face package-description))])) #("monokai" 0 7 (ivy-index 0)) #("   darkokai-theme                 20200614.1452  available    melpa    A darker variant on Monokai." 0 1 (swiper-line-number 924 display "924  ") 1 3 (tabulated-list-id #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) tabulated-list-entry [("darkokai-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) action package-menu-describe-package) #("20200614.1452" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A darker variant on Monokai." 0 28 (font-lock-face package-description))]) 3 17 (button (t) category default-button face package-name font-lock-face package-name follow-link t package-desc #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) action package-menu-describe-package tabulated-list-column-name "Package" tabulated-list-id #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) tabulated-list-entry [("darkokai-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) action package-menu-describe-package) #("20200614.1452" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A darker variant on Monokai." 0 28 (font-lock-face package-description))]) 17 18 (tabulated-list-column-name "Package" tabulated-list-id #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) tabulated-list-entry [("darkokai-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) action package-menu-describe-package) #("20200614.1452" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A darker variant on Monokai." 0 28 (font-lock-face package-description))]) 18 34 (display (space :align-to 33) tabulated-list-column-name "Package" tabulated-list-id #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) tabulated-list-entry [("darkokai-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) action package-menu-describe-package) #("20200614.1452" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A darker variant on Monokai." 0 28 (font-lock-face package-description))]) 34 47 (font-lock-face package-status-available help-echo #("Version: 20200614.1452" 9 22 (font-lock-face package-status-available)) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) tabulated-list-entry [("darkokai-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) action package-menu-describe-package) #("20200614.1452" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A darker variant on Monokai." 0 28 (font-lock-face package-description))]) 47 48 (tabulated-list-column-name "Version" tabulated-list-id #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) tabulated-list-entry [("darkokai-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) action package-menu-describe-package) #("20200614.1452" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A darker variant on Monokai." 0 28 (font-lock-face package-description))]) 48 49 (display (space :align-to 48) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) tabulated-list-entry [("darkokai-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) action package-menu-describe-package) #("20200614.1452" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A darker variant on Monokai." 0 28 (font-lock-face package-description))]) 49 58 (font-lock-face package-status-available help-echo #("Status: available" 8 17 (font-lock-face package-status-available)) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) tabulated-list-entry [("darkokai-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) action package-menu-describe-package) #("20200614.1452" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A darker variant on Monokai." 0 28 (font-lock-face package-description))]) 58 59 (tabulated-list-column-name "Status" tabulated-list-id #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) tabulated-list-entry [("darkokai-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) action package-menu-describe-package) #("20200614.1452" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A darker variant on Monokai." 0 28 (font-lock-face package-description))]) 59 62 (display (space :align-to 61) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) tabulated-list-entry [("darkokai-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) action package-menu-describe-package) #("20200614.1452" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A darker variant on Monokai." 0 28 (font-lock-face package-description))]) 62 67 (font-lock-face package-status-available help-echo #("Archive: melpa" 9 14 (font-lock-face package-status-available)) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) tabulated-list-entry [("darkokai-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) action package-menu-describe-package) #("20200614.1452" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A darker variant on Monokai." 0 28 (font-lock-face package-description))]) 67 68 (tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) tabulated-list-entry [("darkokai-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) action package-menu-describe-package) #("20200614.1452" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A darker variant on Monokai." 0 28 (font-lock-face package-description))]) 68 71 (display (space :align-to 70) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) tabulated-list-entry [("darkokai-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) action package-menu-describe-package) #("20200614.1452" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A darker variant on Monokai." 0 28 (font-lock-face package-description))]) 71 99 (font-lock-face package-description help-echo #("Description: A darker variant on Monokai." 13 41 (font-lock-face package-description)) tabulated-list-column-name "Description" tabulated-list-id #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) tabulated-list-entry [("darkokai-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc darkokai-theme (20200614 1452) "A darker variant on Monokai." nil single "melpa" nil ((:commit . "5820aeddfc8c869ba840cc534eba776936656a66") (:url . "http://github.com/sjrmanning/darkokai")) nil) action package-menu-describe-package) #("20200614.1452" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A darker variant on Monokai." 0 28 (font-lock-face package-description))])) #("lsp-ui" 0 6 (ivy-index 0)) #("         ;; don't set flymake or lsp-ui so the default linter doesn't get trampled" 0 1 (display "1878 " swiper-line-number 1878) 1 9 (fontified t) 9 12 (face font-lock-comment-delimiter-face fontified t) 12 82 (face font-lock-comment-face fontified t)) #("diff-hl" 0 7 (ivy-index 0)) #(" (use-package diff-hl" 0 1 (display "1031 " swiper-line-number 1031) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 21 (face font-lock-constant-face fontified t)) #(" (global-diff-hl-mode)" 0 1 (swiper-line-number 1034 display "1034 ") 1 2 (fontified t face (rainbow-delimiters-depth-1-face)) 2 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-1-face))) #(" ;;  '(minions borg yaml-mode figlet ivy-yasnippet multiple-cursors eyebrowse prettier emacsql-sqlite3 f3 wgrep ivy-posframe hydra-posframe move-text doom-modeline highlight-indent-guides doom-themes focus golden-ratio scrollkeeper -t undo-tree counsel-projectile treemacs-magit diff-hl lsp-treemacs ivy-hydra helpful octicons all-the-icons-ivy-rich ivy-rich counsel swiper beacon emmet-mode loccur treemacs-projectile treemacs-all-the-icons treemacs yasnippet-snippets js-react-redux-yasnippets yasnippet embark-consult embark marginalia orderless vertico rainbow-delimiters all-the-icons telephone-line editorconfig add-node-modules-path flymake-cursor lsp-python-ms modus-themes modus-vivendi-theme npm-mode mini-frame prettier-js lsp-ui lsp-mode modus-operandi-theme magit company web-mode json-mode expand-region which-key exec-path-from-shell use-package))" 0 1 (swiper-line-number 2126 display "2126 ") 1 5 (fontified t face font-lock-comment-delimiter-face) 5 862 (fontified t face font-lock-comment-face)) #("js" 0 2 (ivy-index 5)) #("  :mode ((\"\\\\.jsx?\\\\'\" . web-mode)" 0 1 (display "1656 " swiper-line-number 1656) 1 2 (fontified t) 2 7 (face font-lock-builtin-face fontified t) 7 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-2-face) fontified t) 9 10 (face (rainbow-delimiters-depth-3-face) fontified t) 10 22 (face font-lock-string-face fontified t) 22 33 (fontified t) 33 34 (face (rainbow-delimiters-depth-3-face) fontified t)) #("     (\"J\" js-cheat-sheet \"Javascript Cheat Sheet\")" 0 1 (display "1673 " swiper-line-number 1673) 1 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-5-face) fontified t) 6 9 (face font-lock-string-face fontified t) 9 25 (fontified t) 25 49 (face font-lock-string-face fontified t) 49 50 (face (rainbow-delimiters-depth-5-face) fontified t)) #("rjsx" 0 4 (ivy-index 5)) #(" (use-package rjsx-mode" 0 1 (display "1944 " swiper-line-number 1944) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 23 (face font-lock-constant-face fontified t)) #("lsp-ui-mode" 0 11 (ivy-index 0)) #(" 	:commands lsp-ui-mode" 0 1 (display "1913 " swiper-line-number 1913) 1 2 (fontified t) 2 11 (face font-lock-builtin-face fontified t) 11 12 (fontified t) 12 23 (fontified t)) #(" ;;  :commands lsp-ui-mode)" 0 1 (display "1987 " swiper-line-number 1987) 1 5 (face font-lock-comment-delimiter-face fontified t) 5 27 (face font-lock-comment-face fontified t)) #("lsp-ui-doc" 0 10 (ivy-index 0)) #("        lsp-ui-doc-enable t" 0 1 (display "1911 " swiper-line-number 1911) 1 27 (fontified t)) #("sideline" 0 8 (ivy-index 1)) #(" ;;;        lsp-ui-sideline-show-symbol nil" 0 1 (swiper-line-number 1906 display "1906 ") 1 12 (fontified t face font-lock-comment-delimiter-face) 12 43 (fontified t face font-lock-comment-face)) #("         lsp-ui-sideline-show-symbol nil" 0 1 (display "1906 " swiper-line-number 1906) 1 40 (fontified t)) #("     'ace-jump-mode-pop-mark" 0 1 (display "2090 " swiper-line-number 2090) 1 28 (fontified t)) #(" (defvar ace-jump-mode-gray-background nil)" 0 1 (display "2083 " swiper-line-number 2083) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 38 (face font-lock-variable-name-face fontified t) 38 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-1-face) fontified t)) #("   (use-package ace-jump-mode" 0 1 (swiper-line-number 2073 display "2073 ") 1 3 (fontified t) 3 4 (fontified t face (rainbow-delimiters-depth-1-face)) 4 15 (fontified t face font-lock-keyword-face) 15 16 (fontified t) 16 29 (fontified t face font-lock-constant-face)) #("    (use-package ace-jump-mode" 0 1 (display "5  " swiper-line-number 5 ivy-index 4) 1 2 (read-only nil swiper-line-number 2073 display "2073 " mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) ivy-index 4) 2 4 (read-only nil fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) ivy-index 4) 4 5 (read-only nil fontified t face (rainbow-delimiters-depth-1-face) mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) ivy-index 4) 5 16 (read-only nil fontified t face font-lock-keyword-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) ivy-index 4) 16 17 (read-only nil fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) ivy-index 4) 17 25 (read-only nil fontified t face (ivy-minibuffer-match-face-2 font-lock-constant-face) mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) ivy-index 4) 25 30 (read-only nil fontified t face font-lock-constant-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) ivy-index 4))))
(setq embark--prompter-history '("C-d       org-deadline" "C-l       org-insert-link"))
(setq read-expression-history '("(byte-recompile-directory package-user-dir nil 'force)" "(global-hl-line-mode 1)" "w" "treemacs-current-workspace" "w" "wq" " (byte-recompile-directory \"~/.emacs.d/\" 0 t)" " (byte-recompile-directory \"~/.emacs.d/elpa/\" 0 t)" "(byte-recompile-directory ~\\/.emacs.d\\/elpa nil 'force)" "(byte-recompile-directory ~/.emacs.d/elpa nil 'force)" "(byte-recompile-directory /elpa nil 'force)" "w" "(setq org-imenu-depth 3)" "browse-url-generic" "getenv \"BROWSER\"" "(browse-url \"https://aaahq.org\")" "(browse-url \"https://blogbyben.com\")" "org-roam--sqlite-available-p" "org-roag--sqlite-available-p" "w" "{
  background-image: url(https://papreports.org/assets/img/reach_and_impact/Arkansas_State.png);
  background-position: 50% 50%;
  /* background-size: 40% !important; */
  background-repeat: no-repeat;
  
}" "w" "(functionp 'json-serialize)" "\"C-;\""))
(setq yes-or-no-p-history '("yes" "no" "yes" "no" "yes" "yess" "yes" "y" "yes" "yrd" "no" "yes" "no"))
(setq loccur-history '("vertico" "vertico-mode" "vertico" "setq" "savehist" "savehist" "global-map" "define-key" "use-package" "define-key" "define-key" "define-key" "use-package" "ivy-hydra" "major-mode-hydra" "use-package" "major-mode-hydra-define" "major-mode-hydra-define" "setq" "setq" "comment" "my-pair" "cons" "use-package" "use-package" "use-package" "use-package" "use-package" "use-package" "use-package" "use" "tes" "test" "Prerequisites:" "Prerequisites:"))
(setq regexp-history '("theme" "\\*\\*" "hydra" nil "body" nil "inter" nil "defun"))
(setq buffer-name-history '("init.el" "less-test-8.css" "style-ais.css" "init.el.20220313.broken" "init.el" "init.el.20220313.broken" "init.el" "*tramp/ssh mark@papreports.org*" "init.el" "*Messages*"))
(setq file-name-history '(#("/home/mark/.emacs.d/init.el" 0 27 (ivy-index 1)) "~/.emacs.d/../init.el.20230109" "~/.emacs.d/init.el" "~/.emacs.d/../init.el.20230109" "~/.emacs.d/init.el" "init.el" "~/init.el.20230109" #("/home/mark/init.el.20230109" 0 27 (ivy-index 1)) "~/conferences/" #("/home/mark/conferences/" 0 23 (ivy-index 2)) #("/home/mark/test.html" 0 20 (ivy-index 0)) #("/home/mark/cchat-app/imports/api/issues.js" 0 42 (ivy-index 1)) "~/cchat-app/../conferences/" "~/cchat-app/" "~/.emacs.d/" #("/home/mark/cchat-app/imports/api/" 0 33 (ivy-index 0)) #("/home/mark/cchat-app/imports/api/links.js" 0 41 (ivy-index 4)) #("/home/mark/cchat-app/" 0 21 (ivy-index 0)) #("/home/mark/cchat-app/imports/ui/test.html" 0 41 (ivy-index 0)) #("/home/mark/cchat-app/imports/ui/Issue.svelte" 0 44 (ivy-index 0)) #("/home/mark/cchat-app/client/" 0 28 (ivy-index 3)) "/home/mark/cchat-app/imports/ui/App.svelte" #("/home/mark/cchat-app/server/" 0 28 (ivy-index 6)) "~/cchat-app/" "/" "~/cchat-app/" #("/home/" 0 6 (ivy-index 1)) "~/cchat-app/" #("/home/mark/cchat-app/imports/" 0 29 (ivy-index 4)) #("/home/mark/ilwdata/" 0 19 (ivy-index 12)) #("/var/" 0 5 (ivy-index 1)) #("/home/mark/ilwdata/src/index.njk" 0 32 (ivy-index 10)) #("/var/www/ilwdata.org/" 0 21 (ivy-index 4)) #("/var/www/ilwdata.org/11ty-plain-bootstrap5/src/index.njk" 0 56 (ivy-index 10)) "/" "/var/www/" "/var/www/ilwdata.org/11ty-plain-bootstrap5/src/pages/process.njk" #("/home/mark/.emacs.d/#init.org#" 0 30 (ivy-index 0)) #("/home/mark/.emacs.d/init.el.20220312" 0 36 (ivy-index 2)) #("/home/mark/.emacs.d/..init.el.~undo-tree~.~undo-tree~" 0 53 (ivy-index 0)) "/var/www/ilwdata.org/11ty-plain-bootstrap5/src/pages/contact.njk" "/var/www/ilwdata.org/11ty-plain-bootstrap5/src/pages/founder.njk" "/var/www/ilwdata.org/11ty-plain-bootstrap5/src/layouts/interior.njk" "/var/www/ilwdata.org/11ty-plain-bootstrap5/src/pages/about.njk" "/var/www/ilwdata.org/11ty-plain-bootstrap5/src/pages/process.njk" "/var/www/ilwdata.org/11ty-plain-bootstrap5/src/pages/founder.md" "/var/www/ilwdata.org/11ty-plain-bootstrap5/" #("/var/www/ilwdata.org/11ty-plain-bootstrap5/src/scss/app.scss" 0 60 (ivy-index 5)) #("/var/www/ilwdata.org/11ty-plain-bootstrap5/src/scss/_custom.scss" 0 64 (ivy-index 2)) #("/var/www/ilwdata.org/11ty-plain-bootstrap5/src/scss/" 0 52 (ivy-index 8)) #("/var/www/ilwdata.org/11ty-plain-bootstrap5/src/pages/" 0 53 (ivy-index 7)) #("/var/www/ilwdata.org/11ty-plain-bootstrap5/src/" 0 47 (ivy-index 1)) #("/var/www/ilwdata.org/11ty-plain-bootstrap5/src/pages/examples/" 0 62 (ivy-index 2)) #("/var/www/ilwdata.org/11ty-plain-bootstrap5/src/includes/navigation.njk" 0 70 (ivy-index 6)) #("/var/www/ilwdata.org/11ty-plain-bootstrap5/src/includes/meta.njk" 0 64 (ivy-index 5)) #("/var/www/ilwdata.org/11ty-plain-bootstrap5/src/includes/" 0 56 (ivy-index 4)) #("/var/www/ilwdata.org/11ty-plain-bootstrap5/" 0 43 (ivy-index 2)) "/var/www/ilwdata.org/11straps/11straps-0.2-beta/src/index.njk" "/var/www/ilwdata.org/11ty-starter/package.json" "/var/www/ilwdata.org/11ty-starter/" "/var/www/ilwdata.org/eleventy-sample/_site/../" #("/var/www/ilwdata.org/eleventy-sample/_site/" 0 43 (ivy-index 2)) #("/var/www/ilwdata.org/eleventy-sample/" 0 37 (ivy-index 3)) #("/home/mark/.emacs.d/" 0 20 (ivy-index 0)) #("/var/www/ilwdata.org/eleventy-sample/src/_includes/base.njk" 0 59 (ivy-index 3)) #("/var/www/ilwdata.org/eleventy-sample/src/_includes/" 0 51 (ivy-index 2)) #("/home/mark/.vimrc" 0 17 (ivy-index 26)) #("/var/www/ilwdata.org/eleventy-sample/src/style.css" 0 50 (ivy-index 6)) "~/.emacs.d/init.el" #("/var/www/ilwdata.org/eleventy-sample/src/" 0 41 (ivy-index 1)) "/var/www/ilwdata.org/eleventy-sample/package.json" #("/var/www/ilwdata.org/eleventy-sample/src/index.md" 0 49 (ivy-index 0)) #("/home/mark/" 0 11 (ivy-index 1)) "~/.emacs.d/init.el" "~/.emacs.d/.emacs.d/init.el" "~/.emacs.d/init.el" #("/home/mark/.emacs.d/init.org" 0 28 (ivy-index 3)) "/home/mark/resolutions/imports/app.svelte" "~/resolutions/imports/" "~/resolutions/" #("/home/mark/resolutions/" 0 23 (ivy-index 1)) #("/home/mark/OneDrive/Documents/" 0 30 (ivy-index 6)) "~/meteor_todo/" #("/home/mark/meteor_todo/" 0 23 (ivy-index 36)) "~/.emacs.d/" "~/.emacs.d/init.org" "~/.emacs.d/" "~/.emacs.d/elpa/" "~/.emacs.d/packages/" "~/.emacs.d/wsl-copy.el" #("/home/mark/.emacs.d/wsl-copy.el" 0 31 (ivy-index 0)) #("/home/mark/.emacs.d/..init.org.~undo-tree~.~undo-tree~" 0 54 (ivy-index 0)) #("/mnt/d/OneDrive/" 0 16 (ivy-index 0)) #("/home/mark/test/test.html" 0 25 (ivy-index 0)) "~/test" "~/.emacs.d/" "~/.emacs.d/test/" #("/home/mark/.emacs.d/cd .." 0 25 (ivy-index 0)) #("/home/mark/OneDrive/Org/notes.org" 0 33 (ivy-index 1))))
(setq minibuffer-history '("Keep the project in the project list" "nano-dark" "nano-light" "Keep the project in the project list" "nano-light" "nano-dark" "test.html" "hl-line" "main.js" "hl-line" "doom-peacock" "App.svelte" "imports/ui/App.svelte" "~/conferences/" "treemacs-icons-dired" "doom-molokai" "doom-monokai-spectrum" "doom-zenburn" "zenburn" "darkokai" "airline-base16_gruvbox_dark_hard" "airline-gruvbox-dark" "doom-tomorrow-night" "doom-Iosvkem" "doom-monokai-pro" "doom-peacock" "doom-gruvbox" "leuven" "doom-monokai-spectrum" "doom-monokai-machine" "doom-monokai-classic" "doom-monokai-pro" "modus-vivendi" "doom-peacock" "doom-monokai-pro" "App.jsx" "issues.js" "lib.dom.d.ts" "transpose-frame" "transpose-mark" "yes" "test.html" "main.js" "~/conferences" "~/ilwdata" "treemacs-projectile" "emmet-ls" "ts-ls" "Remove the project from the project list" "Retry" "src/index.njk" "/var/www/ilwdata.org/11ty-plain-bootstrap5/" "treemacs-all-the-icons" "sublimity" "minimap" "*Customize Group: Emacs*" "yes" "dirvish-widgets.el" "dired-fdclone" "fd-dired" "dirvish" "p" "*Packages*" "init.el" "#init.org#" "color-242" "color-236" "black" "pomodoro" "all-the-icons-ivy" "helpful" "doom-peacock" "doom-modeline-now-playing" "use-package-hydra" "ivy-hydra" "*Flymake log*" "contact.njk" "navigation.njk" "base.njk" "footer.njk" "interior.njk" "_my_variables.scss" "process.njk" "header.njk" "examples.njk" "second.njk" "first.njk" "imprint.md" "meta.njk" "process2.njk" "_custom.scss" "privacy.md" "founder.njk" "about.njk" "index.njk" "color-57" "doom-monokai-pro" "doom-peacock" "modus-vivendi" "modus-operandi"))
(setq extended-command-history '("package-install" "package-refresh-contents" "package-install" "eval-region" "lsp-doctor" "beacon-mode" "package-install" "eval-region" "embark-act" "emmet-mode" "eval-region" "list-packages" "package-refresh-contents" "treemacs" "package-install" "list-packages" "package-install" "yas-describe-tables" "yas/describe-tables" "package-install" "eval-region" "package-install" "package-refresh-contents" "package-install"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("/home/mark/.emacs.d/" (0 1 . ["?" nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil]) "/home/mark/cchat-app/" (0 0 . [nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil]) "/home/mark/.emacs.d.28/" (0 0 . [nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil]))))
